# -*- coding: utf-8 -*-
"""Janata Hack - Agriculture.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vtaKCcCf3yXm2XKUPhl2D0EgfC62njEp
"""

# Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import confusion_matrix
import statistics
from sklearn.impute import SimpleImputer

def cmatrix(cm):
    val=0
    for i in range (3):
        val+=cm[i][i]
    print(val/sum(sum(cm))*100)

data_train=pd.DataFrame(pd.read_csv('/content/train_yaOffsB.csv'))

df=data_train.copy()
df.drop('ID',axis=1,inplace=True)

X = df.iloc[:, 0:8].values
y = df.iloc[:, 8].values

X.shape

imputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')
imputer = imputer.fit(X[0:8])
X[0:8] = imputer.transform(X[0:8])

X.shape

classifier1 = RandomForestClassifier(n_estimators = 200, criterion = 'gini', random_state = 2)
classifier1.fit(X, y)
classifier2 = RandomForestClassifier(n_estimators = 150, criterion = 'entropy', random_state = 3)
classifier2.fit(X, y)
classifier3 = RandomForestClassifier(n_estimators = 300, criterion = 'entropy', random_state = 4)
classifier3.fit(X, y)

y_pred1 = classifier1.predict(X)
y_pred2 = classifier2.predict(X)
y_pred3 = classifier3.predict(X)
y_pred=np.around((y_pred1+y_pred2+y_pred3)/3).astype(int)

cm = confusion_matrix(y, y_pred)
cmatrix(cm)

def pred_class(X):
    y_pred1 = classifier1.predict(X)
    y_pred2 = classifier2.predict(X)
    y_pred3 = classifier3.predict(X)
    y_pred=np.around((y_pred1+y_pred2+y_pred3)/3).astype(int)
    return y_pred

data_test=pd.DataFrame(pd.read_csv('/content/test_pFkWwen.csv'))
df_test=data_test.copy()
col1=pd.DataFrame(df_test['ID'])
X_test = df_test.iloc[:, 1:9].values
imputer = imputer.fit(X_test)
X_test = imputer.transform(X_test)

y_pred=pred_class(X_test)
col2=pd.DataFrame(y_pred)
col2.rename(columns={0: "Crop_Damage"},inplace=True)

result=pd.DataFrame({"ID":col1['ID'],"Crop_Damage":col2['Crop_Damage']}).set_index(['ID']).to_csv('submission.csv')